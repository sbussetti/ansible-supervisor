- name: installing supervisor
  pip: name=supervisor
       version={{ supervisor_version }}
       virtualenv={{ supervisor_virtualenv }}
       use_mirrors=no
       extra_args="{% if pip_args %}{{ pip_args }}{% endif %}"

- name: ensuring required supervisor directories
  file: path={{ item }}
        state=directory
  with_items:
    - '{{ bin_dir }}'
    - '{{ supervisor_config_dir }}'

- name: installing supervisor configuration
  template: src=supervisord.conf.j2
            dest={{ supervisor_config }}

- name: installing wrapper scripts
  template: src={{ item.src }}
            dest={{ item.dest }}
            mode=754
  with_items:
    - src: supervisorctl.sh.j2
      dest: '{{ bin_dir }}/supervisorctl'
    - src: supervisord.sh.j2
      dest: '{{ bin_dir }}/supervisord'

- name: creating (optional) link parent dir
  when: supervisor_link != False
  file: path={{ supervisor_link|dirname }} state=directory

- name: setting up supervisor (optional) symlink
  when: supervisor_link != False
  file: src={{ supervisor_home }}
        dest={{ supervisor_link }}
        state=link

- name: installing supervisor http server
  when: supervisor_http
  template: src=supervisor-http.ini.j2
            dest={{ supervisor_config_dir }}/supervisor-http.ini
            mode=754

## MANUAL RUN
- name: checking if supervisord is running
  shell: pgrep -u {{ supervisord_user }} supervisor
  ignore_errors: on
  register: supervisor_running
  when: not supervisor_init_scripts

- name: running supervisord
  shell: chdir={{ supervisor_home }}
         {{ supervisord_path }} -c {{ supervisor_config }}
  when: not supervisor_init_scripts and supervisor_running|failed

## INIT SERVICE RUN
- name: install supervisor service
  become: true
  become_user: root
  template: src=supervisord_initd.j2 dest=/etc/init.d/supervisord mode=0755
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and supervisor_init_scripts

- name: update-rc.d supervisord defaults 
  shell: update-rc.d supervisord defaults
  become: true
  become_user: root
  register: result
  changed_when: "result.rc != 0"
  notify: restart supervisord
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and supervisor_init_scripts

- meta: flush_handlers
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and supervisor_init_scripts

- name: ensure supervisord service
  service: name=supervisord state=started
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and supervisor_init_scripts
  
